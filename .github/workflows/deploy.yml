name: Deploy Bot War API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Start API server
      run: |
        python main.py &
        sleep 5
    
    - name: Run tests
      run: |
        python -m pytest test_api.py -v
      env:
      

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/bot-war:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to production (placeholder)
      run: |
        echo "Image pushed to Docker Hub. Proceeding to SSH deployment."

  ssh-deploy:
    needs: build-and-deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Copy files to VPS via SSH
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        source: "."
        target: "~/bot-war-api"

    - name: Execute remote deployment script
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd ~/bot-war-api
          docker stop bot-war || true && docker rm bot-war || true
          docker rmi ${{ secrets.DOCKER_USERNAME }}/bot-war:latest || true
          docker pull ${{ secrets.DOCKER_USERNAME }}/bot-war:latest
          docker run -d -p 80:80 --name bot-war ${{ secrets.DOCKER_USERNAME }}/bot-war:latest
